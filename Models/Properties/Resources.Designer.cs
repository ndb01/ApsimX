//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Models.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Plant&gt;
        ///  &lt;Name&gt;Slurp&lt;/Name&gt;
        ///  &lt;CropType&gt;Slurp&lt;/CropType&gt;
        ///  &lt;Cultivar&gt;
        ///    &lt;Name&gt;StaticCrop&lt;/Name&gt;
        ///    &lt;Alias&gt;StaticCrop&lt;/Alias&gt;
        ///  &lt;/Cultivar&gt;
        ///  &lt;OrganArbitrator&gt;
        ///    &lt;Name&gt;Arbitrator&lt;/Name&gt;
        ///    &lt;NArbitrationOption&gt;PriorityThenRelativeAllocation&lt;/NArbitrationOption&gt;
        ///    &lt;DMArbitrationOption&gt;RelativeAllocation&lt;/DMArbitrationOption&gt;
        ///  &lt;/OrganArbitrator&gt;
        ///  &lt;Root&gt;
        ///    &lt;Name&gt;Root&lt;/Name&gt;
        ///    &lt;CompositeBiomass&gt;
        ///      &lt;Name&gt;Live&lt;/Name&gt;
        ///      &lt;Propertys&gt;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Chicory {
            get {
                return ResourceManager.GetString("Chicory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Plant&gt;
        ///	&lt;Name&gt;FodderBeet&lt;/Name&gt;
        ///	&lt;CropType&gt;FodderBeet&lt;/CropType&gt;
        ///	&lt;Cultivar&gt;
        ///		&lt;Name&gt;Rivage&lt;/Name&gt;
        ///	&lt;/Cultivar&gt;
        ///	&lt;OrganArbitrator&gt;
        ///		&lt;Name&gt;Arbitrator&lt;/Name&gt;
        ///		&lt;NArbitrationOption&gt;RelativeAllocation&lt;/NArbitrationOption&gt;
        ///		&lt;DMArbitrationOption&gt;RelativeAllocation&lt;/DMArbitrationOption&gt;
        ///		&lt;Memo&gt;
        ///          There are a number of passes involved in the allocation of Weight (Wt).
        ///          Wt_Step 1. Set up DM supplies and demands.  Each organ may have a demand fo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FodderBeet {
            get {
                return ResourceManager.GetString("FodderBeet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Plant&gt;
        ///  &lt;Name&gt;Maize&lt;/Name&gt;
        ///  &lt;CropType&gt;Maize&lt;/CropType&gt;
        ///  &lt;Cultivar&gt;
        ///    &lt;Name&gt;Pioneer_3153&lt;/Name&gt;
        ///    &lt;Alias&gt;Pie&lt;/Alias&gt;
        ///  &lt;/Cultivar&gt;
        ///  &lt;Cultivar&gt;
        ///    &lt;Name&gt;Katumani&lt;/Name&gt;
        ///    &lt;Command&gt;[Phenology].Juvenile.Target = 150&lt;/Command&gt;
        ///    &lt;Command&gt;[Phenology].Photosensitive.Target.XYPairs.X = 0, 12.5, 24&lt;/Command&gt;
        ///    &lt;Command&gt;[Phenology].Photosensitive.Target.XYPairs.X = 0, 0, 115&lt;/Command&gt;
        ///    &lt;Command&gt;[Phenology].FlagLeafToFlowering.Target = 10&lt;/Command&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Maize {
            get {
                return ResourceManager.GetString("Maize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Plant&gt;
        ///	&lt;Name&gt;MCSP&lt;/Name&gt;
        ///	&lt;CropType&gt;MCSP&lt;/CropType&gt;
        ///	&lt;OrganArbitrator&gt;
        ///		&lt;NArbitrationOption&gt;RelativeAllocation&lt;/NArbitrationOption&gt;
        ///		&lt;DMArbitrationOption&gt;RelativeAllocation&lt;/DMArbitrationOption&gt;
        ///	&lt;/OrganArbitrator&gt;
        ///	&lt;Phenology&gt;
        ///		&lt;Name&gt;Phenology&lt;/Name&gt;
        ///		&lt;AirTemperatureFunction&gt;
        ///			&lt;Name&gt;ThermalTime&lt;/Name&gt;
        ///			&lt;XYPairs&gt;
        ///				&lt;Name&gt;XYPairs&lt;/Name&gt;
        ///				&lt;X&gt;
        ///					&lt;double&gt;0&lt;/double&gt;
        ///					&lt;double&gt;30&lt;/double&gt;
        ///					&lt;double&gt;40&lt;/double&gt;
        ///				&lt;/X&gt;
        ///				&lt;Y&gt;
        ///				 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MCSP {
            get {
                return ResourceManager.GetString("MCSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;OilPalm&gt;
        ///  &lt;Name&gt;OilPalm&lt;/Name&gt;
        ///  &lt;Cultivar&gt;
        ///    &lt;Name&gt;Dami&lt;/Name&gt;
        ///    &lt;Memo&gt;
        ///      &lt;Name&gt;Memo&lt;/Name&gt;
        ///      &lt;MemoText&gt;&lt;![CDATA[The base configuration of the oil palm model has been configured to match commercial dura x pisifera palms developed in Dami, West New Britain in Papua New Guinea.  Other varieties are specified in terms of how they differ from this base variety.]]&gt;&lt;/MemoText&gt;
        ///    &lt;/Memo&gt;    
        ///    &lt;/Cultivar&gt;
        ///  &lt;Cultivar&gt;
        ///    &lt;Name&gt;SuperFamily&lt;/Name&gt;
        ///    &lt;Command&gt;[FrondMaxArea].XYPairs.X  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OilPalm {
            get {
                return ResourceManager.GetString("OilPalm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &lt;Plant&gt;
        ///	&lt;Name&gt;Potato&lt;/Name&gt;
        ///	&lt;CropType&gt;Potato&lt;/CropType&gt;
        ///	&lt;Cultivar&gt;
        ///		&lt;Name&gt;JerseyBenny&lt;/Name&gt;
        ///		&lt;Alias&gt;JerseyBenny&lt;/Alias&gt;
        ///		&lt;Command&gt;[Structure].MainStemFinalNodeNumber.value = 19&lt;/Command&gt;
        ///		&lt;Command&gt;[Structure].BranchingRate.Potential_Branching_Rate.XYPairs.X = 0,6,7,10,11&lt;/Command&gt;
        ///		&lt;Command&gt;[Structure].BranchingRate.Potential_Branching_Rate.XYPairs.Y = 0,0,0.5,0.5,0&lt;/Command&gt;
        ///		&lt;Command&gt;[Tuber].DMDemandFunction.OrganNumber.OrganNumberPerStem.value = 3&lt;/Command&gt;
        ///		&lt;Command&gt;[Tuber].DryMatt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Potato {
            get {
                return ResourceManager.GetString("Potato", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;ResidueTypesList&gt;
        ///  &lt;Name&gt;ResidueTypes&lt;/Name&gt;
        ///  &lt;ResidueType&gt;
        ///    &lt;fom_type&gt;base_type&lt;/fom_type&gt;
        ///    &lt;fraction_C description=&quot;fraction of Carbon in FOM (0-1)&quot;&gt;0.4&lt;/fraction_C&gt;
        ///    &lt;po4ppm description=&quot;labile P concentration(ppm)&quot;&gt;0.0&lt;/po4ppm&gt;
        ///    &lt;nh4ppm description=&quot;ammonium N concentration (ppm)&quot;&gt;0.0&lt;/nh4ppm&gt;
        ///    &lt;no3ppm description=&quot;nitrate N concentration (ppm)&quot;&gt;0.0&lt;/no3ppm&gt;
        ///    &lt;specific_area description=&quot;specific area of residue (ha/kg&quot;&gt;0.0005&lt;/specifi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResidueTypes {
            get {
                return ResourceManager.GetString("ResidueTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Plant&gt;
        ///  &lt;Name&gt;Slurp&lt;/Name&gt;
        ///  &lt;CropType&gt;Slurp&lt;/CropType&gt;
        ///  &lt;Cultivar&gt;
        ///    &lt;Name&gt;StaticCrop&lt;/Name&gt;
        ///    &lt;Alias&gt;StaticCrop&lt;/Alias&gt;
        ///  &lt;/Cultivar&gt;
        ///  &lt;OrganArbitrator&gt;
        ///    &lt;Name&gt;Arbitrator&lt;/Name&gt;
        ///    &lt;NArbitrationOption&gt;PriorityThenRelativeAllocation&lt;/NArbitrationOption&gt;
        ///    &lt;DMArbitrationOption&gt;RelativeAllocation&lt;/DMArbitrationOption&gt;
        ///  &lt;/OrganArbitrator&gt;
        ///  &lt;Root&gt;
        ///    &lt;Name&gt;Root&lt;/Name&gt;
        ///    &lt;CompositeBiomass&gt;
        ///      &lt;Name&gt;Live&lt;/Name&gt;
        ///      &lt;Propertys&gt;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Slurp {
            get {
                return ResourceManager.GetString("Slurp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name                              |R    DM    DMD    M/D     EE     CP     dg    ADIP     P        S       AA    MaxP Locales
        ///Alfalfa Hay Early-bloom           |Y  0.900  0.640   9.50  0.030  0.200  0.650  0.110  0.00250  0.00300  1.200  0.000 ca;us         es:&quot;Alfalfa Heno florac temprana&quot;
        ///Alfalfa Hay Full-bloom            |Y  0.900  0.610   9.00  0.030  0.170  0.650  0.160  0.00240  0.00300  1.200  0.000 ca;us         es:&quot;Alfalfa Heno plena floración&quot;
        ///Alfalfa Hay Mature                |Y  0.900  0.540  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Supplement {
            get {
                return ResourceManager.GetString("Supplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Plant15&gt;
        ///  &lt;Name&gt;Wheat&lt;/Name&gt;
        ///  &lt;AutoHarvest&gt;false&lt;/AutoHarvest&gt;
        ///  &lt;CropType&gt;Wheat&lt;/CropType&gt;
        ///  &lt;EOCropFactor&gt;1.5&lt;/EOCropFactor&gt;
        ///  &lt;NSupplyPreference&gt;active&lt;/NSupplyPreference&gt;
        ///  &lt;DoRetranslocationBeforeNDemand&gt;false&lt;/DoRetranslocationBeforeNDemand&gt;
        ///  &lt;RemovedByAnimal /&gt;
        ///  &lt;Population1&gt;
        ///    &lt;Name&gt;Population&lt;/Name&gt;
        ///    &lt;PhaseBasedSwitch&gt;
        ///      &lt;Name&gt;CropFailureStressPeriod&lt;/Name&gt;
        ///      &lt;Start&gt;Emergence&lt;/Start&gt;
        ///      &lt;End&gt;Flowering&lt;/End&gt;
        ///    &lt;/PhaseBasedSwitch&gt;
        ///    &lt;SoilTemperatureWeightedFunc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Wheat {
            get {
                return ResourceManager.GetString("Wheat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     &lt;Plant&gt;
        ///	&lt;Name&gt;WheatPMFPrototype&lt;/Name&gt;
        ///	&lt;CropType&gt;Wheat&lt;/CropType&gt;
        ///	&lt;Cultivar&gt;
        ///		&lt;Name&gt;JerseyBenny&lt;/Name&gt;
        ///		&lt;Alias&gt;JerseyBenny&lt;/Alias&gt;
        ///	&lt;/Cultivar&gt;
        ///	&lt;OrganArbitrator&gt;
        ///		&lt;Name&gt;Arbitrator&lt;/Name&gt;
        ///		&lt;NArbitrationOption&gt;PriorityThenRelativeAllocation&lt;/NArbitrationOption&gt;
        ///		&lt;DMArbitrationOption&gt;PriorityThenRelativeAllocation&lt;/DMArbitrationOption&gt;
        ///	&lt;/OrganArbitrator&gt;
        ///	&lt;Phenology&gt;
        ///		&lt;Name&gt;Phenology&lt;/Name&gt;
        ///		&lt;MultiplyFunction&gt;
        ///			&lt;Name&gt;ThermalTime&lt;/Name&gt;
        ///			&lt;PhaseLookup&gt;
        ///				&lt;Name&gt;Temperature&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WheatPMFPrototype {
            get {
                return ResourceManager.GetString("WheatPMFPrototype", resourceCulture);
            }
        }
    }
}
